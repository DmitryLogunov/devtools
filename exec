#! /bin/sh

if [[ "${1}" = "" ]]; then
  echo "\n ERROR: the parameter SERVICE-ALIASE of service (the first argument in command line) is required and undefined!' The script is terminated.\n"
  exit
fi

if [[ "${1}" = "--help" ]]; then
  echo "\n   DESCRIPTION:"
  echo "\n     Attaches to the some service which executes in some pod of kubernetes cluster and starts console (/bin/sh)"
  echo "\n   USAGE:"
  echo "\n     ./exec  <service-aliace>"
  echo "\n   REQUIRED PARAMETERS:"
  echo "\n     There is one required parameter SERVICE_ALIACE which defines in the first argument." 
  echo "\n     The parameter SERVICE_ALIACE should contain some first letters of service name (the same the name of service folder in the folder /microservices ).\n"
  echo "\n   EXAMPLE:"
  echo "\n     ./exec accounts"
  echo "\n   or (with the same result)"
  echo "\n     ./exec acc\n"
  exit
fi

eval $(cat ./configuration/devlab.config)

ns=${NAMESPACE}
if [[ "${2}" != "" ]]; then
  ns=${2}
fi

if [[ ! -f "./configuration/devlab.config" ]]; then
  echo "\n ERROR: there is no configuration file './configuration/devlab.config'! The script is terminated.\n"
  exit
fi

pod_id=$(kubectl get pods -n ${ns} | grep ${1} | awk '{ print $1 '})

echo "kubectl exec -it ${pod_id} -n ${ns} /bin/sh"

kubectl exec -it ${pod_id} -n ${ns} /bin/sh